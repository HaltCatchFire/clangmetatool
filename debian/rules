#!/usr/bin/make -f
# -*- makefile -*-

include /opt/bb/share/cmake-debhelper/cmake-debhelper-macros.mk
include /opt/bb/share/gcc-build-base/gcc-build-base.mk

PWD:=$(shell pwd)

DEBHELPER_64BIT_5_0_CMAKE_ARGS = \
 -DClang_DIR=/opt/bb/lib/llvm-5.0/lib64/cmake/clang/

DEBHELPER_64BIT_6_0_CMAKE_ARGS = \
 -DClang_DIR=/opt/bb/lib/llvm-6.0/lib64/cmake/clang/

ifneq (amd64,$(DEB_HOST_ARCH))
DEBHELPER_64BIT_5_0_CMAKE_ARGS += -DGTEST_IS_INCOMPATIBLE=1
DEBHELPER_64BIT_6_0_CMAKE_ARGS += -DGTEST_IS_INCOMPATIBLE=1
endif

# takes as argument:
# 1 - the version of clang
# 2 - the name used in the build macro
define CLANGLIB_BINARY_PACKAGE

debian/libclangmetatool-clang-$(1)-dev.teststamp: debian/build64$(2)-stamp
	+$(MAKE) -C build64$(2)/ test

BB_DEBHELPER_BINARY_TARGETS+=debian/libclangmetatool-clang-$(1)-dev.stamp
debian/libclangmetatool-clang-$(1)-dev.stamp: debian/libclangmetatool-clang-$(1)-dev.teststamp
	cd debian/tmp64$(2) && find . -type d \
	  > $(PWD)/debian/libclangmetatool-clang-$(1)-dev.dirs
	cd debian/tmp64$(2) && find . -type f \
	  > $(PWD)/debian/libclangmetatool-clang-$(1)-dev.install
	bb-dh-dirs --package libclangmetatool-clang-$(1)-dev
	bb-dh-install --source debian/tmp64$(2) \
	  --package libclangmetatool-clang-$(1)-dev
	bb-dh-binary --package libclangmetatool-clang-$(1)-dev

endef

$(eval $(call DEBHELPER_BIARCH_BUILD,64,_5_0))
$(eval $(call CLANGLIB_BINARY_PACKAGE,5.0,_5_0))

$(eval $(call DEBHELPER_BIARCH_BUILD,64,_6_0))
$(eval $(call CLANGLIB_BINARY_PACKAGE,6.0,_6_0))

include /opt/bb/share/cmake-debhelper/cmake-debhelper-rules.mk
